trigger:
  - main
pr:
  autoCancel: true
  branches:
    include:
      - main
  drafts: true
stages:
  - stage: Build
    displayName: Build the web application
    jobs:
      - job: BuildJob
        displayName: Build job
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: 20.x
            displayName: Install Node.js
          - script: |
              echo "Build Commands Executed"
              # npm install -g @angular/cli
              npm install
              # ng build --configuration production
            displayName: Angular Build
          - script: |
              npm run release:semantic-release
            displayName: Semantic Release
            env:
              GH_TOKEN: $(gitToken)
              GITHUB_TOKEN: $(gitToken)
          - script: |
              echo $(nextRelease)
          - bash: echo "##vso[task.setvariable variable=testVariable;isOutput=true]this is a stage output variable"
            name: MyOutputVar
            displayName: 'Show next version'
  - stage: Dev
    displayName: Deploy to the dev environment
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: Deploy
        environment: dev
      - job: DevBuildJob
        displayName: Deploy to Dev
        pool:
          vmImage: ubuntu-latest
        variables:
          testVariable: $[stageDependencies.Build.BuildJob.outputs['MyOutputVar.testVariable']]
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: 20.x
            displayName: Install Node.js
          - script: |
              echo "Output Variable $(testVariable)"
            displayName: Display next release version
          - script: |
              echo "Build Commands Executed"
              # npm install -g @angular/cli
              npm install
              # ng build --configuration production
          - bash: echo $(testVariable)
            displayName: Angular Build
  - stage: Staging
    displayName: Deploy to the staging environment
    dependsOn: Dev
    variables:
      nextReleaseVersion: $[ dependencies.Dev.outputs['DevBuildJob.nextReleaseVersion'] ]
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: Deploy
        environment: dev
      - job: Build
        displayName: Build job
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: 20.x
            displayName: Install Node.js
          - script: |
              echo $(nextReleaseVersion)
              npm install -g @angular/cli
              npm install
              ng build --configuration production
            displayName: npm install and build
